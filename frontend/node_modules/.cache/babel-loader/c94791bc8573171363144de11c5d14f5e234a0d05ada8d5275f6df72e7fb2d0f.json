{"ast":null,"code":"var _jsxFileName = \"/home/jvcbyte/Downloads/ecommerce/frontend/src/components/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Chatbot.css';\nimport { FaComments } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    try {\n      const response = await fetch('http://localhost:5001/api/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      let botMessage = {\n        text: '',\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      switch (data.type) {\n        case 'products':\n          botMessage.text = `I found some products for you:\\n\\n${data.results.map(p => `- ${p.name} - $${p.price.toFixed(2)}`).join('\\n')}`;\n          break;\n        case 'comparison':\n          botMessage.text = `Comparing products:\\n\\n${data.products.map(p => `${p.name}:\\n- Price: $${p.price.toFixed(2)}\\n- ${p.description}`).join('\\n\\n')}`;\n          break;\n        case 'faq':\n          botMessage.text = data.answer;\n          break;\n        case 'availability':\n          botMessage.text = data.available ? 'The product is currently in stock!' : 'I apologize, but this product is currently out of stock.';\n          break;\n        case 'recommendations':\n          botMessage.text = `Here are some products you might like:\\n\\n${data.products.map(p => `- ${p.name} - $${p.price.toFixed(2)}`).join('\\n')}`;\n          break;\n        default:\n          botMessage.text = data.message;\n      }\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        text: 'Sorry, I encountered an error. Please try again later.',\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString()\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggle\",\n      onClick: () => setIsOpen(!isOpen),\n      \"aria-label\": \"Toggle chatbot\",\n      children: /*#__PURE__*/_jsxDEV(FaComments, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Customer Support Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"chatbot-close\",\n          onClick: () => setIsOpen(false),\n          \"aria-label\": \"Close chatbot\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timestamp\",\n              children: message.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"Type your message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"dw2qd7zS8fSoSdoM8PVvyilvL9w=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaComments","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","isOpen","setIsOpen","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","e","preventDefault","trim","userMessage","text","sender","timestamp","Date","toLocaleTimeString","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","type","results","map","p","name","price","toFixed","join","products","description","answer","available","error","console","className","children","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","index","ref","onSubmit","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/home/jvcbyte/Downloads/ecommerce/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './Chatbot.css';\nimport { FaComments } from 'react-icons/fa';\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    const userMessage = {\n      text: input,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n\n    try {\n      const response = await fetch('http://localhost:5001/api/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: input })\n      });\n\n      const data = await response.json();\n      \n      let botMessage = {\n        text: '',\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString()\n      };\n\n      switch (data.type) {\n        case 'products':\n          botMessage.text = `I found some products for you:\\n\\n${\n            data.results.map(p => `- ${p.name} - $${p.price.toFixed(2)}`).join('\\n')\n          }`;\n          break;\n        case 'comparison':\n          botMessage.text = `Comparing products:\\n\\n${\n            data.products.map(p => `${p.name}:\\n- Price: $${p.price.toFixed(2)}\\n- ${p.description}`).join('\\n\\n')\n          }`;\n          break;\n        case 'faq':\n          botMessage.text = data.answer;\n          break;\n        case 'availability':\n          botMessage.text = data.available \n            ? 'The product is currently in stock!'\n            : 'I apologize, but this product is currently out of stock.';\n          break;\n        case 'recommendations':\n          botMessage.text = `Here are some products you might like:\\n\\n${\n            data.products.map(p => `- ${p.name} - $${p.price.toFixed(2)}`).join('\\n')\n          }`;\n          break;\n        default:\n          botMessage.text = data.message;\n      }\n\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        text: 'Sorry, I encountered an error. Please try again later.',\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString()\n      }]);\n    }\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <button \n        className=\"chatbot-toggle\"\n        onClick={() => setIsOpen(!isOpen)}\n        aria-label=\"Toggle chatbot\"\n      >\n        <FaComments size={24} />\n      </button>\n      {isOpen && (\n        <div className=\"chatbot-popup\">\n          <div className=\"chatbot-header\">\n            <h3>Customer Support Chatbot</h3>\n            <button \n              className=\"chatbot-close\"\n              onClick={() => setIsOpen(false)}\n              aria-label=\"Close chatbot\"\n            >\n              ×\n            </button>\n          </div>\n          <div className=\"chatbot-messages\">\n            {messages.map((message, index) => (\n              <div \n                key={index}\n                className={`message ${message.sender}`}\n              >\n                <div className=\"message-content\">\n                  <p>{message.text}</p>\n                  <span className=\"timestamp\">{message.timestamp}</span>\n                </div>\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n          <form onSubmit={sendMessage} className=\"chatbot-input\">\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Type your message...\"\n            />\n            <button type=\"submit\">Send</button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}